version = 0.1

[default] 

[default.deploy]

[default.deploy.parameters]
stack_name = "{{ cookiecutter.stack_name }}"
s3_bucket = "aws-sam-stacks"
s3_prefix = "{{ cookiecutter.stack_name }}"
region = "us-east-1"

confirm_changeset = true

capabilities = [
    "CAPABILITY_IAM",
    "CAPABILITY_NAMED_IAM",
    "CAPABILITY_AUTO_EXPAND",
]

image_repositories = []

parameter_overrides = [
    # IAM
    "RoleNameParameter={{ cookiecutter.stack_name }}-role",
    "RepositoryParameter={{ cookiecutter.github_repository }}",
    "PolicyNameParameter={{ cookiecutter.stack_name }}-role-policy",
    "OIDCProviderArnParameter={{ cookiecutter.iam_oidc_provider_arn }}",

    # S3
    "BucketNameParameter={{ cookiecutter.origin_bucket_name }}",
    "BucketArnOutputParameter={{ cookiecutter.stack_name }}-bucket-arn",
    "BucketRegionalDomainNameOutputParameter={{ cookiecutter.stack_name }}-cdn-bucket-regional-domain-name",

    # Route 53
    "RecordNameParameter={{ cookiecutter.route53_record_name }}",
    "HostedZoneIdParameter={{ cookiecutter.route53_hosted_zone_id }}",

    # CloudFront
    "CachePolicyNameParameter={{ cookiecutter.stack_name }}-cache-policy-name",
    "DefaultRootObjectParameter=index.html",
    "AcmCertificateArnParameter={{ cookiecutter.acm_certificate_arn }}",
    "OriginAccessControlNameParameter={{ cookiecutter.stack_name }}-cdn-origin-access-control-name",
    "CloudFrontDomainNameOutputParameter={{ cookiecutter.stack_name }}-bucket-domain-name",

    # Lambda
    "FunctionsFolderPathParameter={{ cookiecutter.functions_folder_path }}",

    "FunctionPolicyNameParameter={{ cookiecutter.stack_name }}-function-policy-name",
    "BlockFunctionVersionArnOutputParameter={{ cookiecutter.stack_name }}-block-function-version-arn",
    "IndexFunctionVersionArnOutputParameter={{ cookiecutter.stack_name }}-index-function-version-arn",
    "HeadersFunctionVersionArnOutputParameter={{ cookiecutter.stack_name }}-headers-function-version-arn",    
]
